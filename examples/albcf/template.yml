# CUSTOM FENRIR PROPERTIES
ProjectName: "coinbase/fenrir/albcf/hello"
ConfigName: "development"

# SAM TEMPLATE
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Hello SAM

Resources:
  helloAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      EndpointConfiguration: REGIONAL

  basicHello:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: hello.lambda
      Runtime: go1.x
      Timeout: 5
      Role: default@lambda

  basicHelloPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${basicHello.Arn}
      Principal: elasticloadbalancing.amazonaws.com

  hello:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: hello.lambda
      Runtime: go1.x
      Timeout: 5
      Policies:
      - LambdaInvokePolicy:
          FunctionName: !Ref basicHello
      - DynamoDBCrudPolicy:
          TableName: !Ref helloTable
      - SQSPollerPolicy:
          QueueName: !Ref helloQueue
      - VPCAccessPolicy: {}
      Events:
        hi:
          Type: Api
          Properties:
            RestApiId: !Ref helloAPI
            Path: /hello
            Method: GET

  cloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub ${lb.DNSName}
          Id: loadBalancer
          CustomOriginConfig:
            HTTPPort: 80
            OriginProtocolPolicy: http-only
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: loadBalancer
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
          ViewerProtocolPolicy: allow-all

  lb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Subnets:
        - subnet-5ec27260
        - subnet-7dd4bc53

  lbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref lb
      Port: 80
      Protocol: HTTP
      DefaultActions:
      - Type: fixed-response
        FixedResponseConfig:
          StatusCode: "404"

  lbHelloRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref lbHelloTarget
      Conditions:
      - Field: path-pattern
        Values:
        - /hello
      ListenerArn: !Ref lbListener
      Priority: 10
    dependsOn:
    - basicHelloPermission

  lbHelloTarget:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: lambda
      Targets:
      - Id: !Sub ${basicHello.Arn}

  helloTable:
    Type: AWS::Serverless::SimpleTable
    DeletionPolicy: Delete
    Properties:
      PrimaryKey:
        Name: id
        Type: String

  helloQueue:
    Type: AWS::SQS::Queue

Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Sub "https://${helloAPI}.execute-api.${AWS::Region}.amazonaws.com/dev"
